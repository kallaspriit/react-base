# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'atom-text-editor:not([mini])':
  'ctrl-d': 'editor:delete-line'
  'ctrl-alt-down': 'editor:duplicate-lines'
  'alt-+': 'last-cursor-position:next'

'.platform-win32':
  'ctrl-o': 'fuzzy-finder:toggle-file-finder'

# ELM
# 'atom-text-editor:not([mini])[data-grammar^="source elm"]':
#   'f12': 'elmjutsu:go-to-definition'
#   'ctrl-r': 'elmjutsu:go-to-symbol'
#   'shift-f12': 'elmjutsu:find-usages'
#   'f8': 'elmjutsu:go-to-next-usage'
#   'shift-f8': 'elmjutsu:go-to-previous-usage'
#   'ctrl-f12': 'elmjutsu:go-back'
#   'f2': 'elmjutsu:rename-symbol'
#   'alt-insert': 'elmjutsu:add-import'
#   'f1': 'elmjutsu:toggle-sidekick'
#   'ctrl-shift-f12': 'elmjutsu:hide-usages-panel'

'body':
  'ctrl-alt-s': 'application:show-settings'

'.platform-win32, .platform-linux':
  'ctrl-h': 'project-find:show'

# 'atom-text-editor[data-grammar="source js jsx"]:not([mini])':
#   'tab': 'emmet:expand-abbreviation-with-tab'

# Stop emmet from hijacking basic tabbing
'atom-text-editor[data-grammar="text html basic"]:not([mini]),
 atom-text-editor[data-grammar~="jade"]:not([mini]),
 atom-text-editor[data-grammar~="css"]:not([mini]),
 atom-text-editor[data-grammar~="sass"]:not([mini])':
  'tab': 'snippets:next-tab-stop'

# Emmet for JSX
'atom-text-editor[data-grammar~="jsx"]:not([mini])':
  'tab': 'emmet:expand-abbreviation-with-tab'

# Stop emmet from hijacking tab from snippets and autocomplete
'atom-text-editor.autocomplete-active:not([mini])':
  'tab': 'autocomplete-plus:confirm'

# Refactor rename
'atom-text-editor:not(.mini)':
  'alt-shift-r': 'refactor:rename'
